name: Docker

on:
  push:
    branches:
      - develop
      - 1.0-develop
  pull_request:
    branches:
      - develop
      - 1.0-develop
  release:
    types:
      - published

jobs:
  push:
    name: Push
    runs-on: ubuntu-20.04
    if: "!contains(github.ref, 'develop') || (!contains(github.event.head_commit.message, 'skip docker') && !contains(github.event.head_commit.message, 'docker skip'))"
    steps:
      - name: Code checkout
        uses: actions/checkout@v3

      - name: Docker metadata
        uses: docker/metadata-action@v4
        with:
          images: ghcr.io/pterodactyl/panel
          flavor: |
            latest=false
          tags: |
            type=raw,value=latest,enable=${{ github.event_name == 'release' && github.event.action == 'published' && github.event.release.prerelease == false }}
            type=ref,event=tag
            type=ref,event=branch

      - name: Setup QEMU
        uses: docker/setup-qemu-action@v2

      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@v2

      - name: Docker login
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.REGISTRY_TOKEN }}

      - name: Release production build
        uses: docker/build-push-action@v3
        if: "contains(github.ref, 'release/v')"
        with:
          context: .
          file: ./Containerfile
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.docker_meta.outputs.tags }}
          labels: ${{ steps.docker_meta.outputs.labels }}

      - name: Release development build
        uses: docker/build-push-action@v3
        if: "contains(github.ref, 'develop')"
        with:
          context: .
          file: ./Containerfile
          push: ${{ github.event_name != 'pull_request' }}
          platforms: linux/amd64 #,linux/arm64
          tags: ${{ steps.docker_meta.outputs.tags }}
          labels: ${{ steps.docker_meta.outputs.labels }}
          tags: ${{ steps.docker_meta.outputs.tags }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
